version: '3'
services:
  action:
    container_name: action
    build:
      context: .
      dockerfile: Dockerfile_action
    environment:
      - SYNK_REDIS_HOST=redis
      - SYNK_ENV=production
    depends_on:
      - redis
  synk:
    container_name: synk
    build:
      context: .
      dockerfile: Dockerfile_synk
    environment:
      - SYNK_REDIS_HOST=redis
      - SYNK_ENV=production
  redis:
    image: redis
    # Setting the container name explicitly prevents docker-compose from
    # scaling this image beyond a single instance. In the case of redis, this
    # is desirable - we only want one redis instance. We also use the container
    # name (with DNS) to help eternal-http instances find the redis service.
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
  main:
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      # docker-compose passes these through from the host environment to the
      # containers. Note that we use a default value as described here:
      # https://docs.docker.com/compose/compose-file/#variable-substitution
      - HTTPS_REDIRECT=${HTTPS_REDIRECT:-eternal.media.mit.edu}
    # Use the envsubst command to do variable replacement on the nginx.conf
    # file. Note how we escape the $sign to specify which variables we would
    # like to replace. We need to tell 'envsubst' which variables to replace.
    # This is needed because the nginx log_format directive also uses $
    # variable syntax.
    command: /bin/sh -c "envsubst '$$HTTPS_REDIRECT' < /etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    build:
      context: .
      dockerfile: Dockerfile_main
    volumes:
      - ./certificates:/synk/certificates:ro
      - ./webroot:/synk/webroot:ro
      - ./public:/synk/public:ro

# Because we use a named volume, the `$ docker-compse down` command will not
# remove the volume. If we specify an anonymous volume in the redis service,
# running `docker-compose down` will remove the volume.
#
# To remove the redis-data volume, use the -v option `$ docker-compose down -v`
volumes:
  redis-data:
